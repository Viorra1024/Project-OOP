from django import forms
from django.contrib.auth.models import User
from django.contrib.auth.forms import UserCreationForm
from django.contrib.auth.password_validation import validate_password
from .models import Profile, Post, Category

class ProfileUpdateForm(forms.ModelForm):
    class Meta:
        model = Profile
        fields = ['avatar', 'bio']

class PostForm(forms.ModelForm):
    category = forms.ModelChoiceField(
        queryset=Category.objects.all(),  # –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        required=False,
        empty_label="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
    )

    class Meta:
        model = Post
        fields = ['title', 'content', 'image', 'category']  # –¢–µ–ø–µ—Ä—å –∫–∞—Ç–µ–≥–æ—Ä–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏

# üîπ –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–∞—Ä–æ–ª—è
class RegisterForm(UserCreationForm):
    email = forms.EmailField(
        required=True,
        error_messages={
            "required": "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É.",  # üõ† –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç
            "invalid": "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email-–∞–¥—Ä–µ—Å."
        }
    )
    username = forms.CharField(
        max_length=150,
        error_messages={
            "required": "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
            "unique": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
        }
    )
    password1 = forms.CharField(
        widget=forms.PasswordInput,
        error_messages={
            "required": "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å.",
            "min_length": "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤."
        }
    )
    password2 = forms.CharField(
        widget=forms.PasswordInput,
        error_messages={
            "required": "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å.",
            "invalid": "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç."
        }
    )

    class Meta:
        model = User
        fields = ["username", "email", "password1", "password2"]

    def clean_password1(self):
        password = self.cleaned_data.get("password1")
        try:
            validate_password(password)  # üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è Django
        except forms.ValidationError as e:
            raise forms.ValidationError("–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π.")  # üõ† –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
        return password

